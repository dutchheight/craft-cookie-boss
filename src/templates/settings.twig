{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Craft Cookie boss plugin for Craft CMS 3.x
 *
 * Craft Cookie boss Settings.twig
 *
 * @author    Dutch Height
 * @copyright Copyright (c) 2019 Dutch Height
 * @link      www.dutchheight.com
 * @package   CookieBoss
 * @since     1.0.0
 */
#}

{% extends "_layouts/cp" %}
{% set fullPageForm = true %}

{% import "_includes/forms" as forms %}

{% set title = 'Cookie Boss Settings'|t('cookie-boss') %}

{% block actionButton %}
    <div id="save-btn-container" class="btngroup submit">
        {{ tag('input', {
            type: 'submit',
            class: ['btn', 'submit'],
            value: 'Save'|t('app'),
        }) }}
        <div class="btn submit menubtn"></div>
        <div class="menu" data-align="right">
            <ul>
                <li>
                    <a class="formsubmit" data-name="submit-reset" data-param="reset-consent" data-value="true" data-action="cookie-boss/settings/save-general">
                        {{ 'Save and invalidate consent'|t('cookie-boss') }}
                    </a>
                </li>
            </ul>
        </div>
    </div>
{% endblock %}

{% block content %}
    <input type="hidden" name="action" value="cookie-boss/settings/save-general">
    {{ csrfInput() }}

    <div id="list-general">

        {{ forms.lightswitchField({
            label: 'Enabled' |t('app'),
            instructions: 'Enable Cookie Boss.' |t('cookie-boss'),
            id: 'enabled',
            name: 'enabled',
            on: settings['enabled']})
        }}

        {{ forms.lightswitchField({
            label: 'Give choices immediately' |t('cookie-boss'),
            instructions: 'Give choices immediately, turn off if u want "using is accepting". Keep in mind you can present the settings on a different page.' |t('cookie-boss'),
            id: 'presentGroups',
            name: 'presentGroups',
            on: settings['presentGroups']})
        }}

        {{ forms.lightswitchField({
            label: 'Force accept' |t('cookie-boss'),
            instructions: 'Prevent using the page until a consent is given.' |t('cookie-boss'),
            id: 'forceAccept',
            name: 'forceAccept',
            on: settings['forceAccept']})
        }}

        {{ forms.elementSelectField({
            label: 'Cookie page' |t('cookie-boss'),
            instructions: 'Set cookie info page.' |t('cookie-boss'),
            id: 'contactPage',
            name: 'contactPage',
            elementType: '\\craft\\elements\\Entry',
            elements: [settings['cookiesPageId']],
            limit: 1})
        }}

        {{ forms.textField({
            label: 'Consent invalid after in days' |t('cookie-boss'),
            instructions: 'The amount of time the consent is valid.' |t('cookie-boss'),
            id: 'cookieTime',
            name: 'cookieTime',
            type: 'number',
            min: 1,
            max: 365,
            value: settings['cookieTime']
        }) }}
    </div>

    <div id="list-popup" class="hidden">
        {{ forms.textField({
            label: 'Title' |t('app'),
            instructions: 'The title of the consent popup.' |t('cookie-boss'),
            id: 'title',
            name: 'title',
            value: settings['title']
        }) }}

        {{ forms.textareaField({
            label: 'Message' |t('app'),
            instructions: 'The message of the consent popup.' |t('cookie-boss'),
            id: 'message',
            name: 'message',
            value: settings['message']
        }) }}

        {{ forms.textareaField({
                label: 'Settings message' |t('cookie-boss'),
                instructions: 'The settings message of the consent popup.' |t('cookie-boss'),
                id: 'messageSettings',
                name: 'messageSettings',
                value: settings['messageSettings']
        }) }}

        {{ forms.textField({
                label: 'Accept Button' |t('cookie-boss'),
                instructions: 'The text of the accept button.' |t('cookie-boss'),
                id: 'acceptButtonText',
                name: 'acceptButtonText',
                value: settings['acceptButtonText']
        }) }}

        {{ forms.textField({
                label: 'Settings Button' |t('cookie-boss'),
                instructions: 'The text of the settings button.' |t('cookie-boss'),
                id: 'settingsButtonText',
                name: 'settingsButtonText',
                value: settings['settingsButtonText']
        }) }}

        {{ forms.textField({
            label: 'Hide after' |t('cookie-boss'),
            instructions: 'Set the amount of seconds the the popup is visable. When the popup hides all default cookies are accepted. Set 0 to disable.' |t('cookie-boss'),
            id: 'acceptAfterSeconds',
            name: 'acceptAfterSeconds',
            type: 'number',
            min: 0,
            value: settings['acceptAfterSeconds']
        }) }}

        {{ forms.selectField({
            label: 'Position' |t('cookie-boss'),
            instructions: 'Set the popup position.' |t('cookie-boss'),
            id: 'position',
            name: 'position',
            options: {
                "top-left": "Top left" |t('cookie-boss'),
                "top-right": "Top right" |t('cookie-boss'),
                "bottom-left": "Bottom left" |t('cookie-boss'),
                "bottom-right": "Bottom right" |t('cookie-boss'),
                "bottom-center": "Bottom center" |t('cookie-boss'),
                "center": "Center" |t('cookie-boss'),
            },
            value: settings['position']
        }) }}
    </div>

    <div id="list-consent-groups" class="hidden">
        {{ forms.editableTableField({
            id: 'consentGroups',
            label: 'Consent groups' |t('cookie-boss'),
            required: true,
            instructions: 'A consent group is a group of cookies for a specific purpose.' |t('cookie-boss'),
            name: 'consentGroups',
            rows: consentGroups,
            cols: {
                id: {
                    type: 'number',
                    class: 'hidden'
                },
                enabled: {
                    heading: 'Enabled' |t('app'),
                    type: 'lightswitch',
                },
                name: {
                    id: 'name',
                    heading: 'Name' |t('app'),
                    type: 'singleline',
                    info: 'The name of this consent group.' |t('cookie-boss'),
                },
                handle: {
                    heading: 'Handle' |t('app'),
                    type: 'singleline',
                    class: 'code',
                    autocorrect: false,
                    autocapitalize: false,
                    info: 'Handle to use in twig.' |t('cookie-boss'),
                },
                desc: {
                    heading: 'Description' |t('app'),
                    type: 'text',
                    info: 'The description of this group. This description is visable for your visitors.' |t('cookie-boss'),
                },
                defaultValue: {
                    heading: 'Default on' |t('cookie-boss'),
                    type: 'lightswitch',
                    info: 'Switches the default state.' |t('cookie-boss'),
                },
                required: {
                    heading: 'Required' |t('cookie-boss'),
                    type: 'lightswitch',
                    info: 'Set to true if this consent group is required to opperate the site.' |t('cookie-boss'),
                }
            },
        }) }}
    </div>

    <div id="list-cookies" class="hidden">
        {{ forms.editableTableField({
            id: 'cookies',
            label: 'Cookies' |t('cookie-boss'),
            required: true,
            instructions: 'All cookies used on this site.' |t('cookie-boss'),
            name: 'cookies',
            rows: cookies,
            cols: {
                id: {
                    type: 'number',
                    class: 'hidden'
                },
                enabled: {
                    heading: 'Enabled' |t('app'),
                    type: 'lightswitch',
                },
                consentGroupId: {
                    heading: 'Consent group' |t('cookie-boss'),
                    type: 'select',
                    options: consentGroupsSelectOptions,
                    info: 'Define the consent group.' |t('cookie-boss'),
                },
                name: {
                    id: 'name',
                    heading: 'Name' |t('app'),
                    type: 'singleline',
                },
                key: {
                    heading: 'key' |t('app'),
                    type: 'singleline',
                    class: 'code',
                    autocorrect: false,
                    autocapitalize: false,
                    info: 'Key used for this cookie.' |t('cookie-boss'),
                },
                purpose: {
                    heading: 'Purpose' |t('cookie-boss'),
                    type: 'text',
                    info: 'The purpose of this cookie. This description is visable for your visitors.' |t('cookie-boss'),
                },
                desc: {
                    heading: 'Description' |t('app'),
                    type: 'text',
                    info: 'The description of this cookie. This description is visable for your visitors.' |t('cookie-boss'),
                }
            },
        }) }}
    </div>
{% endblock %}

{% js %}
    $('.btn.add.icon').click(function($event) {
        setTimeout(function() {
            var consentGroupsNewRow = $('#consentGroups >tbody >tr').length - 1;
            new Craft.HandleGenerator('textarea[name=consentGroups\\[' + consentGroupsNewRow + '\\]\\[name\\]]', 'textarea[name=consentGroups\\[' + consentGroupsNewRow + '\\]\\[handle\\]]');
        }, 500);
    });

    $('.btn.add.icon').click(function($event) {
        setTimeout(function() {
            var cookieDescriptionNewRow = $('#cookies >tbody >tr').length - 1;
            new Craft.HandleGenerator('textarea[name=cookies\\[' + cookieDescriptionNewRow + '\\]\\[name\\]]', 'textarea[name=cookies\\[' + cookieDescriptionNewRow + '\\]\\[key\\]]');
        }, 500);
    });
{% endjs %}